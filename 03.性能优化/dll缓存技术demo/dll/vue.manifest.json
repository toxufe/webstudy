{
    "name": "vue",
    "content": {
        "./node_modules/pinia/dist/pinia.mjs": {
            "id": "./node_modules/pinia/dist/pinia.mjs",
            "buildMeta": {
                "exportsType": "namespace",
                "strictHarmonyModule": true
            },
            "exports": [
                "MutationType",
                "PiniaVuePlugin",
                "acceptHMRUpdate",
                "createPinia",
                "defineStore",
                "getActivePinia",
                "mapActions",
                "mapGetters",
                "mapState",
                "mapStores",
                "mapWritableState",
                "setActivePinia",
                "setMapStoreSuffix",
                "skipHydrate",
                "storeToRefs"
            ]
        },
        "./node_modules/vue-router/dist/vue-router.mjs": {
            "id": "./node_modules/vue-router/dist/vue-router.mjs",
            "buildMeta": {
                "exportsType": "namespace",
                "strictHarmonyModule": true
            },
            "exports": [
                "NavigationFailureType",
                "RouterLink",
                "RouterView",
                "START_LOCATION",
                "createMemoryHistory",
                "createRouter",
                "createRouterMatcher",
                "createWebHashHistory",
                "createWebHistory",
                "isNavigationFailure",
                "loadRouteLocation",
                "matchedRouteKey",
                "onBeforeRouteLeave",
                "onBeforeRouteUpdate",
                "parseQuery",
                "routeLocationKey",
                "routerKey",
                "routerViewLocationKey",
                "stringifyQuery",
                "useLink",
                "useRoute",
                "useRouter",
                "viewDepthKey"
            ]
        },
        "./node_modules/vue/dist/vue.runtime.esm-bundler.js": {
            "id": "./node_modules/vue/dist/vue.runtime.esm-bundler.js",
            "buildMeta": {
                "exportsType": "namespace"
            },
            "exports": [
                "BaseTransition",
                "BaseTransitionPropsValidators",
                "Comment",
                "DeprecationTypes",
                "EffectScope",
                "ErrorCodes",
                "ErrorTypeStrings",
                "Fragment",
                "KeepAlive",
                "ReactiveEffect",
                "Static",
                "Suspense",
                "Teleport",
                "Text",
                "TrackOpTypes",
                "Transition",
                "TransitionGroup",
                "TriggerOpTypes",
                "VueElement",
                "assertNumber",
                "callWithAsyncErrorHandling",
                "callWithErrorHandling",
                "camelize",
                "capitalize",
                "cloneVNode",
                "compatUtils",
                "compile",
                "computed",
                "createApp",
                "createBlock",
                "createCommentVNode",
                "createElementBlock",
                "createElementVNode",
                "createHydrationRenderer",
                "createPropsRestProxy",
                "createRenderer",
                "createSSRApp",
                "createSlots",
                "createStaticVNode",
                "createTextVNode",
                "createVNode",
                "customRef",
                "defineAsyncComponent",
                "defineComponent",
                "defineCustomElement",
                "defineEmits",
                "defineExpose",
                "defineModel",
                "defineOptions",
                "defineProps",
                "defineSSRCustomElement",
                "defineSlots",
                "devtools",
                "effect",
                "effectScope",
                "getCurrentInstance",
                "getCurrentScope",
                "getTransitionRawChildren",
                "guardReactiveProps",
                "h",
                "handleError",
                "hasInjectionContext",
                "hydrate",
                "initCustomFormatter",
                "initDirectivesForSSR",
                "inject",
                "isMemoSame",
                "isProxy",
                "isReactive",
                "isReadonly",
                "isRef",
                "isRuntimeOnly",
                "isShallow",
                "isVNode",
                "markRaw",
                "mergeDefaults",
                "mergeModels",
                "mergeProps",
                "nextTick",
                "normalizeClass",
                "normalizeProps",
                "normalizeStyle",
                "onActivated",
                "onBeforeMount",
                "onBeforeUnmount",
                "onBeforeUpdate",
                "onDeactivated",
                "onErrorCaptured",
                "onMounted",
                "onRenderTracked",
                "onRenderTriggered",
                "onScopeDispose",
                "onServerPrefetch",
                "onUnmounted",
                "onUpdated",
                "openBlock",
                "popScopeId",
                "provide",
                "proxyRefs",
                "pushScopeId",
                "queuePostFlushCb",
                "reactive",
                "readonly",
                "ref",
                "registerRuntimeCompiler",
                "render",
                "renderList",
                "renderSlot",
                "resolveComponent",
                "resolveDirective",
                "resolveDynamicComponent",
                "resolveFilter",
                "resolveTransitionHooks",
                "setBlockTracking",
                "setDevtoolsHook",
                "setTransitionHooks",
                "shallowReactive",
                "shallowReadonly",
                "shallowRef",
                "ssrContextKey",
                "ssrUtils",
                "stop",
                "toDisplayString",
                "toHandlerKey",
                "toHandlers",
                "toRaw",
                "toRef",
                "toRefs",
                "toValue",
                "transformVNodeArgs",
                "triggerRef",
                "unref",
                "useAttrs",
                "useCssModule",
                "useCssVars",
                "useModel",
                "useSSRContext",
                "useSlots",
                "useTransitionState",
                "vModelCheckbox",
                "vModelDynamic",
                "vModelRadio",
                "vModelSelect",
                "vModelText",
                "vShow",
                "version",
                "warn",
                "watch",
                "watchEffect",
                "watchPostEffect",
                "watchSyncEffect",
                "withAsyncContext",
                "withCtx",
                "withDefaults",
                "withDirectives",
                "withKeys",
                "withMemo",
                "withModifiers",
                "withScopeId"
            ]
        }
    }
}